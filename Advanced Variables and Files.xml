<blocks app="Snap! 9.0, https://snap.berkeley.edu" version="2"><palette><category name="Variables (Advanced)" color="0,116,143,1"/><category name="Files" color="252,152,0,1"/></palette><block-definition s="get value of variable %&apos;variable&apos;" type="reporter" category="Variables (Advanced)"><header></header><code></code><translations></translations><inputs><input type="%txt">myVar<options>§_getVarNamesDict</options></input></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>var_get(name)</l><list><block var="variable"/></list></block></block></script></block-definition><block-definition s="variable %&apos;var&apos; changed since last check" type="predicate" category="Variables (Advanced)"><header></header><code></code><translations></translations><inputs><input type="%txt">checkForChange<options>§_getVarNamesDict</options></input></inputs><script><block s="doApplyExtension"><l>var_declare(scope, name)</l><list><l>global</l><block s="reportJoinWords"><list><l>prev_</l><block var="var"/></list></block></list></block><block s="doIf"><block s="reportNot"><block s="reportVariadicEquals"><list><block s="reportApplyExtension"><l>var_get(name)</l><list><block var="var"/></list></block><block s="reportApplyExtension"><l>var_get(name)</l><list><block s="reportJoinWords"><list><l>prev_</l><block var="var"/></list></block></list></block></list></block></block><script><block s="doApplyExtension"><l>var_set(name, val)</l><list><block var="var"/><block s="reportApplyExtension"><l>var_get(name)</l><list><block s="reportJoinWords"><list><l>prev_</l><block var="var"/></list></block></list></block></list></block><block s="doReport"><block s="reportBoolean"><l><bool>true</bool></l></block></block></script><list></list></block><block s="doReport"><block s="reportBoolean"><l><bool>false</bool></l></block></block></script></block-definition><block-definition s="variable %&apos;variable&apos; is showing" type="predicate" category="Variables (Advanced)"><header></header><code></code><translations></translations><inputs><input type="%txt">myVar<options>§_getVarNamesDict</options></input></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>var_showing(name)?</l><list><block var="variable"/></list></block></block></script></block-definition><block-definition s="variable %&apos;variable&apos; exists in scope %&apos;scope&apos;" type="predicate" category="Variables (Advanced)"><header></header><code></code><translations></translations><inputs><input type="%txt">mightNotExist<options>§_getVarNamesDict</options></input><input type="%txt">global<options>global=global</options></input></inputs><script><block s="doReport"><block s="reportListContainsItem"><custom-block s="get all variables for scope %txt"><block var="scope"/></custom-block><block var="variable"/></block></block></script></block-definition><block-definition s="get all variables for scope %&apos;scope&apos;" type="reporter" category="Variables (Advanced)"><header></header><code></code><translations></translations><inputs><input type="%txt">global<options>global=global</options></input></inputs><script><block s="doReport"><block s="reportApplyExtension"><l>var_names(scope)</l><list><block var="scope"/></list></block></block></script></block-definition><block-definition s="ask to save %&apos;text&apos; as a file named %&apos;name&apos;" type="command" category="Files"><header></header><code></code><translations></translations><inputs><input type="%mlt">file content</input><input type="%txt">file</input></inputs><script><block s="doApplyExtension"><l>txt_export(txt, name)</l><list><block var="text"/><block var="name"/></list></block></script></block-definition><block-definition s="set variable %&apos;variable&apos; is showing to %&apos;showing&apos;" type="command" category="Variables (Advanced)"><header></header><code></code><translations></translations><inputs><input type="%txt">myVar<options>§_getVarNamesDict</options></input><input type="%b">false</input></inputs><script><block s="doIf"><block s="reportVariadicAnd"><list><custom-block s="variable %txt is showing"><l>myVar</l></custom-block><block var="showing"/></list></block><script></script><list><block s="reportVariadicAnd"><list><custom-block s="variable %txt is showing"><l>myVar</l></custom-block><block s="reportNot"><block var="showing"/></block></list></block><script><block s="doApplyExtension"><l>var_hide(name)</l><list><block var="variable"/></list></block></script><block s="reportVariadicAnd"><list><block s="reportNot"><custom-block s="variable %txt is showing"><l>myVar</l></custom-block></block><block var="showing"/></list></block><script><block s="doApplyExtension"><l>var_show(name)</l><list><block var="variable"/></list></block></script></list></block></script></block-definition><block-definition s="set value of variable %&apos;variable&apos; to %&apos;value&apos;" type="command" category="Variables (Advanced)"><header></header><code></code><translations></translations><inputs><input type="%txt">myVar<options>§_getVarNamesDict</options></input><input type="%s"></input></inputs><script><block s="doApplyExtension"><l>var_set(name, val)</l><list><block var="variable"/><block var="value"/></list></block></script></block-definition><block-definition s="delete variable %&apos;variable&apos;" type="command" category="Variables (Advanced)"><header></header><code></code><translations></translations><inputs><input type="%txt">wantYouGone<options>§_getVarNamesDict</options></input></inputs><script><block s="doApplyExtension"><l>var_delete(name)</l><list><block var="variable"/></list></block></script></block-definition><block-definition s="create variable with scope %&apos;scope&apos; named %&apos;name&apos;" type="command" category="Variables (Advanced)"><header></header><code></code><translations></translations><inputs><input type="%txt">global<options>global=global</options></input><input type="%txt">newVar</input></inputs><script><block s="doApplyExtension"><l>var_declare(scope, name)</l><list><block var="scope"/><block var="name"/></list></block></script></block-definition></blocks>